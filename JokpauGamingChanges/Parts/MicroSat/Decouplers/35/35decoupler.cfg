PART
{
	name = 35decoupler
	module = Part
	author = squiggsy
	mesh = model.mu
	scale = 1
	rescaleFactor = 1
	node_stack_bottom = 0.0, -0.023, 0.0, 0.0, -1.0, 0.0,0
	node_stack_top = 0.0, 0.077, 0.0, 0.0, 1.0, 0.0,0
	fx_gasBurst_white = 0.0, 0.077, 0.0, 0.0, 1.0, 0.0, decouple
	sound_vent_large = decouple
	TechRequired = miniaturization
	entryCost = 1000
	cost = 25
	category = Coupling
	subcategory = 0
	title = #LOC_SSR_35decoupler_title // #35decoupler_title = Squarified to Octagonal Adaptive Decoupler
	manufacturer = #LOC_SSR_35decoupler_manufacturer // #35decoupler_manufacturer = Squiggsy Space Research
	description = #LOC_SSR_35decoupler_description // #35decoupler_description = Have you ever found yourself thinking "I wish I could detatch my squarified things from my octagonal thing in style?", no we haven't either, but we made this product anyway for your enjoyment!
	tags = #LOC_SSR_35decoupler_tags // #35decoupler_tags = break decouple explo separat split ssr squiggs microsat
	attachRules = 1,0,1,1,0
	mass = 0.005
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 9
	maxTemp = 2000 // = 3400
	fuelCrossFeed = False
	stageOffset = 1
	childStageOffset = 1
	bulkheadProfiles = size0

	MODULE
	{
		name = ModuleDecouple
		ejectionForce = 10
		explosiveNodeID = top
	}
	MODULE
	{
		name = ModuleTestSubject
		environments = 15
		useStaging = True
		useEvent = False
		situationMask = 127

		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}
MODULE
{
	name = ModuleCargoPart
	stackableQuantity = 1
	packedVolume = 40
}
}
